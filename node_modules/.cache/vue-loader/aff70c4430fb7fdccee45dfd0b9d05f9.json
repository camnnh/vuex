{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/src/App.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/src/App.vue","mtime":1615045972121},{"path":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/node_modules/cache-loader/dist/cjs.js","mtime":1615043136010},{"path":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/node_modules/babel-loader/lib/index.js","mtime":1615043135948},{"path":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/node_modules/ts-loader/index.js","mtime":1615043147940},{"path":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/node_modules/cache-loader/dist/cjs.js","mtime":1615043136010},{"path":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/node_modules/vue-loader-v16/dist/index.js","mtime":1615043151800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGNvbXB1dGVkLCBkZWZpbmVDb21wb25lbnQsIG9uTW91bnRlZCB9IGZyb20gJ3Z1ZScKCmltcG9ydCBOZXdJdGVtIGZyb20gJy4vY29tcG9uZW50cy9OZXdJdGVtLnZ1ZScKaW1wb3J0IFRvZG9MaXN0IGZyb20gJy4vY29tcG9uZW50cy9Ub2RvTGlzdC52dWUnCmltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAnLi9zdG9yZScKaW1wb3J0IHsgQWN0aW9uVHlwZXMgfSBmcm9tICcuL3N0b3JlL2FjdGlvbnMnCgpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsgVG9kb0xpc3QsIE5ld0l0ZW0gfSwKICBzZXR1cCgpIHsKICAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoKQoKICAgIGNvbnN0IGxvYWRpbmcgPSBjb21wdXRlZCgoKSA9PiBzdG9yZS5zdGF0ZS5sb2FkaW5nKQogICAgb25Nb3VudGVkKCgpID0+IHN0b3JlLmRpc3BhdGNoKEFjdGlvblR5cGVzLkdldFRvZG9JdGVtcykpCgogICAgY29uc3QgY29tcGxldGVkQ291bnQgPSBjb21wdXRlZCgoKSA9PiBzdG9yZS5nZXR0ZXJzLmNvbXBsZXRlZENvdW50KQogICAgY29uc3QgdG90YWxDb3VudCA9IGNvbXB1dGVkKCgpID0+IHN0b3JlLmdldHRlcnMudG90YWxDb3VudCkKICAgIHJldHVybiB7IGxvYWRpbmcsIGNvbXBsZXRlZENvdW50LCB0b3RhbENvdW50IH0KICB9Cn0pCg=="},{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/src/App.vue"],"names":[],"mappings":";AAoBA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAEzD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEvB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAExD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC/C;AACF,CAAC","file":"/Applications/XAMPP/xamppfiles/htdocs/ung_dung_web/vuex-typescript-todoapp/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container mx-auto mt-4\">\n    <h1 class=\"text-3xl text-center p-2 font-bold\">\n      Vue 3 Todo App with Typescript and Vuex 4\n    </h1>\n\n    <div v-if=\"loading\">\n      <h3 class=\"text-center mt-4\">Loading...</h3>\n    </div>\n    <div v-else>\n      <p class=\"text-center mt-2\">\n        {{ completedCount }} of {{ totalCount }} completed.\n      </p>\n      <NewItem />\n      <TodoList />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted } from 'vue'\n\nimport NewItem from './components/NewItem.vue'\nimport TodoList from './components/TodoList.vue'\nimport { useStore } from './store'\nimport { ActionTypes } from './store/actions'\n\nexport default defineComponent({\n  components: { TodoList, NewItem },\n  setup() {\n    const store = useStore()\n\n    const loading = computed(() => store.state.loading)\n    onMounted(() => store.dispatch(ActionTypes.GetTodoItems))\n\n    const completedCount = computed(() => store.getters.completedCount)\n    const totalCount = computed(() => store.getters.totalCount)\n    return { loading, completedCount, totalCount }\n  }\n})\n</script>\n"]}]}